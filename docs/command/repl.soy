{namespace buck.command.repl}

/***/
{template .soyweb}
  {call buck.page}
    {param title: 'buck repl' /}
    {param prettify: true /}
    {param description}
      A shell for interactive experimentation with buck internals.
    {/param}
    {param content}

{call buck.command}

{param overview}
<p>A shell for interactive experimentation with buck internals.</p>
<p>
It fires up a JavaScript interactive shell that has access to buck internals. This is mainly for
experimentation and debugging. It can be used to run other buck commands or create/modify buck
objects. Any of the APIs may change without notice. Start the repl by: <pre>buck repl</pre>
</p>

<h2>Available Methods</h2>

<ul class="{css arglist}">

{call buck.functionArg}
  {param name: 'quit(), exit()' /}
  {param desc}
  Exit the repl.
 {/param}
{/call}

{call buck.functionArg}
  {param name: 'help()' /}
  {param desc}
  A list of the available Buck objects and methods.
 {/param}
{/call}

{call buck.functionArg}
  {param name: 'query(String query)' /}
  {param desc}
  Perform a simple query. The query behaves exactly the same as <code>buck query</code>. It returns
  an array with the results.
 {/param}
{/call}

{call buck.functionArg}
  {param name: 'printQuery(Query result)' /}
  {param desc}
  Pretty prints the result of repl's query(). The result matches <code>buck query</code> format.
 {/param}
{/call}

</ul>

<h2>Available Objects</h2>

<ul class="{css arglist}">

{call buck.functionArg}
  {param name: 'BUCK_params' /}
  {param desc}
  Gives you access to <code>CommandRunnerParams params</code>. For example, if you want access to
  the Event Bus you can do <code>BUCK_params.getBuckEventBus()</code>.
 {/param}
{/call}

{call buck.functionArg}
  {param name: 'BUCK_queryEnv' /}
  {param desc}
  Gives you access to <code>BuckQueryEnvironment</code> to perform <code>buck query</code>. This
  object is being used from <code>query(String query)</code>, changes to it will alter the behavior
  of methods using it internally.
 {/param}
{/call}

{call buck.functionArg}
  {param name: 'BUCK_queryPool' /}
  {param desc}
  Gives you access to <code>CommandThreadManager</code> to perform <code>buck query</code>. This
  object is being used from <code>query(String query)</code>, changes to it will alter the behavior
  of methods using internally.
 {/param}
{/call}

</ul>

<p>More objects can be added if you use the Java constructors from inside the repl.</p>

<h2>Examples</h2>
<p>
Access a buck class field or a method:
<pre>
{literal}
buck $ var value = com.facebook.buck.cli.ReplCommand.EXIT_MESSAGE
buck $ print(value)
buck $ EXITMESSAGE
{/literal}
</pre>
</p>
<p>
Perform a simple query:
<pre>
{literal}
buck $ var result = query("deps(//src/com/facebook/buck/cli:)")
buck $ print(result)
buck $ [//src/com/facebook/buck/cli:cli, ... ]
buck $ printQuery(result)
buck $ //src/com/facebook/buck/cli:cli
buck $ //src/com/facebook/buck/cli:config
       ...
{/literal}
</pre>
</p>

<h2>Engine</h2>
<p>
The JavaScript engine <code>repl</code> is Nashorn. Nashorn's User Guide can be found <a
href="https://docs.oracle.com/javase/8/docs/technotes/guides/scripting/nashorn/toc.html">here</a>.
The available API is <a
href="https://docs.oracle.com/javase/8/docs/technotes/guides/scripting/nashorn/api.html#sthref17">
here</a> but it may be limited inside <code>repl</code> for various reasons.
</p>

<h2>Limitations</h2>
{call buck.functionArg}
  {param name: 'Interactive only' /}
  {param desc}
  The intended usage of the repl is as an interactive shell. It is not meant to be used in scripts.
  An error will be raised if it starts in a non-interactive environment.
 {/param}
{/call}

{call buck.functionArg}
  {param name: 'Nashorn' /}
  {param desc}
  <code>repl</code> is based on Nashorn. It can not be used without it. Nashorn comes bundled with
  Java 8 but there are ways to make it work with Java 7. If you get an error <code>This feature
  requires Nashorn JavaScript engine</code>, it means Nashorn is not available with your Java
  engine. You could update to Java 8 to solve this.
 {/param}
{/call}

{/param}
{/call}

    {/param}  // content
  {/call} // buck.page
{/template}
