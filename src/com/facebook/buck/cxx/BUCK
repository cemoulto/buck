PLATFORM_SRCS = [
  'AbstractCxxPlatform.java',
  'AbstractNativeLinkableInput.java',
  'Archiver.java',
  'BsdArchiver.java',
  'ByteBufferReplacer.java',
  'CanProvideSharedNativeLinkTarget.java',
  'ClangCompiler.java',
  'ClangPreprocessor.java',
  'Compiler.java',
  'CompilerProvider.java',
  'CxxToolProvider.java',
  'DebugPathSanitizer.java',
  'DebugSection.java',
  'DebugSectionFinder.java',
  'DebugSectionProperty.java',
  'DefaultCompiler.java',
  'DefaultPreprocessor.java',
  'GnuArchiver.java',
  'GnuLinker.java',
  'Linker.java',
  'LinkerProvider.java',
  'Linkers.java',
  'NativeLinkable.java',
  'NativeLinkables.java',
  'ObjectFileScrubbers.java',
  'PosixNmSymbolNameTool.java',
  'Preprocessor.java',
  'PreprocessorProvider.java',
  'SharedNativeLinkTarget.java',
  'SymbolNameTool.java',
  'VersionedTool.java',
  'WindowsLinker.java',
]
java_immutables_library(
  name = 'platform',
  srcs = PLATFORM_SRCS,
  immutable_types = [
    'CxxPlatform',
    'NativeLinkableInput',
  ],
  autodeps = True,
  visibility = [
    'PUBLIC'
  ],
)

# This is here only so that we don't have to let rules depend on xcode.
# FrameworkPathArg depends on xcode because Javac insists on being able to see the type on which
# we're calling .toString()
FRAMEWORK_PATH_ARG_SRCS = [
  'FrameworkPathArg.java',
]
java_library(
  name = 'framework_path_arg',
  srcs = FRAMEWORK_PATH_ARG_SRCS,
  tests = [
    '//test/com/facebook/buck/cxx:cxx',
  ],
  autodeps = True,
  visibility = [
    '//test/com/facebook/buck/cxx/...',
  ],
)

java_immutables_library(
  name = 'rules',
  srcs = glob(['*.java'], excludes=PLATFORM_SRCS + FRAMEWORK_PATH_ARG_SRCS),
  immutable_types = [
    'CxxCompilationDatabaseDependencies',
    'CxxCompilationDatabaseEntry',
    'CxxHeaders',
    'CxxHeaderSourceSpec',
    'CxxSource',
    'CxxSourceRuleFactory',
    'CxxSourceSet',
    'MachoHeader',
    'PreprocessorFlags',
  ],
  tests = [
    '//test/com/facebook/buck/cxx:cxx',
  ],
  autodeps = True,
  visibility = [
    'PUBLIC'
  ],
)
